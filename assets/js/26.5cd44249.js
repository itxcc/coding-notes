(window.webpackJsonp=window.webpackJsonp||[]).push([[26],{418:function(t,e,r){"use strict";r.r(e);var a=r(1),o=Object(a.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"javascript的节流、防抖使用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#javascript的节流、防抖使用场景"}},[t._v("#")]),t._v(" JavaScript的节流、防抖使用场景")]),t._v(" "),r("p",[t._v("在一次面试中被问到，直接懵逼，没听过的概念，后面查了一下资料，自己做个Demo学习一下。")]),t._v(" "),r("h2",{attrs:{id:"什么是节流和防抖"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是节流和防抖"}},[t._v("#")]),t._v(" 什么是节流和防抖")]),t._v(" "),r("blockquote",[r("p",[t._v("浏览器中某些计算和处理要比其他的昂贵很多。例如，DOM操作比起非DOM操作交互需要更多的内存和CPU时间。")]),t._v(" "),r("p",[t._v("函数节流背后的基本思想是指，某些代码不可以在没有间断的情况连续重复执行。第一次调用函数，创建一个定时器，在指定的时间间隔之后运行代码。当第二次调用该函数是，它会清除前一次的定时器并设置另一个。如果前一个定时器已经执行过了，这个操作就没有任何意义。然而，如果前一个定时器尚未执行，其实就是将其替换为一个新的定时器。目的是只有执行函数的请求停止了一段时间之后才执行。")]),t._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[t._v("function throttle(method, context) {\n    clearTimeout(method.tId);\n        method.tId= setTimeout(function(){\n        method.call(context);\n    }, 100);\n}\n")])])]),r("p",[t._v("--- 《JavaScript高级程序设计》")])]),t._v(" "),r("p",[t._v("我的理解：")]),t._v(" "),r("p",[t._v("节流：对于"),r("code",[t._v("input")]),t._v("、"),r("code",[t._v("scroll")]),t._v("等短时间内有大量操作的变为每隔一段时间执行。")]),t._v(" "),r("p",[t._v("防抖：对于"),r("code",[t._v("input")]),t._v("、"),r("code",[t._v("scroll")]),t._v("等短时间内有大量操作的变为执行最后那一次。比如："),r("code",[t._v("input")]),t._v("输入，先让一个"),r("code",[t._v("setTimout")]),t._v("延时执行，如果再有输入，清除前一个"),r("code",[t._v("setTimeout")])]),t._v(" "),r("p",[t._v("防抖和节流的目的都是为了减少不必要的计算，不浪费资源，只在适合的时候再进行触发计算。")]),t._v(" "),r("h2",{attrs:{id:"demo"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#demo"}},[t._v("#")]),t._v(" "),r("a",{attrs:{href:"https://itxcc.github.io/demo/throttle-debounce/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Demo"),r("OutboundLink")],1)]),t._v(" "),r("h2",{attrs:{id:"应用场景"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#应用场景"}},[t._v("#")]),t._v(" 应用场景")]),t._v(" "),r("p",[t._v("防抖：")]),t._v(" "),r("ul",[r("li",[r("code",[t._v("input")]),t._v("输入时，不断输入值，要利用防抖来节约请求资源。")]),t._v(" "),r("li",[t._v("频繁操作点赞和取消点赞，因此需要获取最后一次操作结果并发送给服务器")]),t._v(" "),r("li",[t._v("使用scroll、touchmove进行操作室")])]),t._v(" "),r("p",[t._v("节流：")]),t._v(" "),r("ul",[r("li",[t._v("鼠标不断点击触发，mousedown(单位时间内只触发一次)")]),t._v(" "),r("li",[t._v("window触发resize的时候，不断的调整浏览器窗口大小会不断的触发这个事件，用防抖来让其只触发一次")])]),t._v(" "),r("h2",{attrs:{id:"参考"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),r("ul",[r("li",[r("p",[r("a",{attrs:{href:"https://css-tricks.com/the-difference-between-throttling-and-debouncing/",target:"_blank",rel:"noopener noreferrer"}},[t._v("The Difference Between Throttling and Debouncing"),r("OutboundLink")],1)])]),t._v(" "),r("li",[r("p",[r("a",{attrs:{href:"http://www.alloyteam.com/2012/11/javascript-throttle/",target:"_blank",rel:"noopener noreferrer"}},[t._v("浅谈 JavaScript 的函数节流"),r("OutboundLink")],1)])])])])}),[],!1,null,null,null);e.default=o.exports}}]);